#   python -m pygame.examples.aliens   控制台运行pygame自带的小游戏
----------------------------------------------------------------------------------------------------
pygame最小开发框架    
    import pygame,sys           #引入相关库
    pygame.init()                        #初始化相关变量
    screen=pygame.display.set_mode((800,600))         #设置窗体大小
    pygame.display.set_caption("窗体名称")
    while True:
        #获取事件响应  并且处理
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                sys.exit()
        pygame.display.flip()    
----------------------------------------------------------------------------------------------------
透明度
    pygame支持3中类型透明度
        colorkeys
            指定一种颜色，将其变成透明 可以和 surface aplhas一起使用
        surface aplhas
            整体设置一个图像的透明度    可以和 colorkeys一起使用
        pixel aplhas
            为名一个像素增加一个aplha通道
    修改图像单个像素
        set_at()
            设置单个像素的颜色  使用RGBA 
        get_at()
            获取单个像素的颜色  使用RGBA
screen.blit()
    将图像信息展示出来
    第一个参数为一个 surface 对象，第二个为位置信息 rect对象 用于绘制surface对象的矩形     获取的矩形
screen.fill(color)
    填充的颜色，前面的是需要填充的矩形
    screen.fill(color)      设置窗口填充的颜色  不设置默认为黑色
----------------------------------------------------------------------------------------------------
pygame的模块
    访问光驱  cdrom   


    加载光驱 cursors 


    访问显示设备 display 
        --设置屏幕大小
            set_mode()
                --返回一个 surface 对象，代表了窗口；第一个参数位分辨率用一个元组表示
                第二个参数标志位，见下，第三个位色深
                FULLSCREEN      创建全屏窗口
                DOUBLEBUF       双缓冲窗口和 HWSURACE 或者　OPENGL 搭配使用
                HWSURACE        硬件加速窗口  和 DOUBLEBUF 搭配使用
                OPENGL          使用OPENGL渲染窗口 和 DOUBLEBUF 搭配使用
                RESIZEABLE      创建一个可变大小的窗口
                NOFRAME         创建一个无边框的窗口
        --查看本机支持的分辨率
            list_modes()
                查看支持的显示模式,返回包含本机所有分辨率的列表  分辨率从高到底


    绘制形状、线、点  draw  
        --绘制一个矩形
            draw.rect(surface,color,Rect,width=0)
            返回一个rect
            surface：在哪个surface上绘制矩形
            color： 边框的颜色
            Rect：  边框的范围(left,top,width,height)
            width:  边框的宽度
            
    

    管理事件  event   
        --事件检索
            QUIT            用户按下关闭                none
            ATIVEEVENT      pygame被激活或者隐藏        gain,state
            KEYDOWN         键盘按下                    unicode, key, mod
            KEYUP           键盘放开                    key,mod
            MOUSEMOTION     鼠标移动                    pos,rel,buttons
            MOUSEBUTTONDOWN 鼠标按下                    pos,button
            MOUSEBUTTONUP   鼠标放开                    pos,button
            JOYAXISMOTION   游戏手柄(pad/joystick)移动  joy,axis,value
            JOYBALLMOTION   游戏手柄(joy ball)移动      joy,axis,value
            JOYHATMOTION	游戏手柄(Joystick)?移动	    joy, axis, value
            JOYBUTTONDOWN	游戏手柄按下	            joy, button
            JOYBUTTONUP	    游戏手柄放开	            joy, button
            VIDEORESIZE	    Pygame窗口缩放	            size, w, h
            VIDEOEXPOSE	    Pygame窗口部分公开(expose)?	none
            USEREVENT	    触发了一个用户事件           code
        --事件过滤
            --暂时屏蔽不处理的事件,多个事件用列表传递
                pygame.event.set_blocked(event)
            --取消屏蔽事件
                pygame.event.set_blocked(None)  #打开所有事件响应
                pygame.event.set_allowed(event) #取消屏蔽事件处理，可以时列表
        产生事件
            my_event = pygame.event.Event(KEYDOWN, {"key":K_SPACE, "mod":0, "unicode":u' '})
            pygame.event.post(my_event)
            #甚至可以定义一个全新的pygame没有的事件然后捕获它
    
    
    使用字体 font 
        --创建字体
            my_font=pygame.font.Sysfont("微软也黑",12)          #可以使用自己的字体 即 ttf文件
        --查看字体
            pygame.font.get_fonts()    #查看系统支持的所有字体
        --书写字体
            书写字到屏幕需要一个 surface层
            test_surface=my_font.render("内容",True,(0,0,0),(255,255,255))
            arg1:书写的内容
            arg2:是否开启抗锯齿
            arg3:字体颜色
            arg4:字体背景颜色，如果没有设置则为透明
    
    
    加载图片 image 
        --加载图像
            img=pygame.image.load("path")
                从文件中加载图像保留原像素的格式
        --转换为surface对象
            convert()
                将图像数据转换为 surface对象，每次加载完成图像都应该调用
            covert_aplha()  
                相比 covert保留了alpha通道信息，即透明部分


    使用游戏手柄或者类似的东西 joystick 


    读取键盘按键 key 
        --响应键盘操作  KEYDOWN  KEYUP
            key：按键信息 键值
            mod:组合信息 mod&KMOD_CTRL 同时按下了ctrl  KMOD_SHIFT KMOD_ALT
            unicode：按下的键的unicode编码值


    声音 mixer 
        --音效
            支持的格式十分有限，音效推荐使用  .wav   背景音效推荐使用 .ogg
            play()
                播放
            stop()
                停止
            fadeout()
                淡出
            set_volume(x)
                设置音量  0.0-1.0
            get_volume()
                获取音量
            get_num_channels()
                计算音效播放了多少次
            get_length()
                获取该音效的长度
            get_raw()
                将该音效以二进制格式的字符串返回
        --背景音效  music
            pygame.mixer.music.*
            load()
                加载背景音效
            play()
                播放背景音效
            rewind()
                重新播放
            stop()
                停止
            pause()
                暂停
            unpasue()   
                取消暂停
            fadout()    
                淡出
            set_volume()
                设置音量大小
            get_volume()
                获取音量大小
            get_busy()
                检测音乐流是否正在播放
            set_pos()
                设置开始播放的位置
            get_pos()
                获取已经播放的时间
            queue()
                将音乐文件放入待播放的列表
            set_endevent()
                在音乐播放完毕之后发送事件
            get_endevent()
                获取在音乐播放完毕时发送的事件类型


    鼠标 mouse 
        --MOUSEMOTION事件
            arg1:三个数的元组，分别代表左中右键 1表示被按下
            arg2:位置
            arg3:表示现在距离上次产生事件的距离
        --获取鼠标位置
            pygame.mouse.get_pos()
            返回鼠标位置x,y

    播放视频 movie   


    播放音频 mousic  


    访问高级视频叠加 voerlay 


    初级 pygame  


    管理矩形区域 rect    
        --创建矩形
            rect(surface,color,Rect,width=0)
                surface:规定矩形将会绘制到哪个surface对象上
                color:  指定颜色
                Rect:   指定矩形的范围(left,top,width,height)
                width:  矩形的边框的宽度   默认为0 填充整个矩形 边框向外延申
        --创建多边形
            polygon(surface,color,pointsList,width=0)
                surface:规定矩形将会绘制到哪个surface对象上
                color:  指定颜色
                Rect:   指定绘制多边形的时候的每一个点的位置
                width:  矩形的边框的宽度   默认为0 填充整个矩形 边框向外延申
        --创建圆：
            circle(surface,color,pos,radius,width=0)
                surface:规定矩形将会绘制到哪个surface对象上
                color:  指定颜色
                pos:    绘制的圆心的位置
                radius: 绘制圆的半径
                width:  矩形的边框的宽度   默认为0 填充整个矩形 边框向外延申
        --创建椭圆
            ellpise(surface,color,rect,width=0)
                surface:规定矩形将会绘制到哪个surface对象上
                color:  指定颜色
                Rect:   规定绘制椭圆的矩形，如果规定的矩形为正方形的话，绘制出来的结果就是一个圆
                width:  矩形的边框的宽度   默认为0 填充整个矩形 边框向外延申
        --绘制弧线
            arc(surface,color,Rect,startAngle,stopAngle,width=1)
                surface:规定矩形将会绘制到哪个surface对象上
                color:  指定颜色
                Rect:   规定绘制弧线的矩形，实际上是绘制的椭圆的一部分
                startAngle：起始角度  单位弧度   起始角度为0 的时候从右边开始 pi/2 的时候从上面开始
                stopAngle： 结束的角度 单位弧度  path.pi  从右边开始计算的弧度
                width:  矩形的边框的宽度   默认为1 
        --绘制线条
            line(surface,color,startPos,endPos,width=1)
                在指定的位置绘制一条线条
            lines(surface,color,closed,pointList,width=1)
                closed:bool值是否闭合线条
                pointList:绘制的线条的点的列表
                width:不同于 polygon 绘制的线条可以闭合但是不能使用width=0 来填充
            aaline(surface,color,startPos,endPos,width=1)
            aalines(surface,color,closed,pointList,width=1)
                绘制抗拒此的线条

                
    操作声音数据 sndarray    


    操作移动图像 sprite  
        --碰撞检测
            sprite.spritecollide(sprite,group,dokill,collided=None)
                sprite: 被检测的精灵
                group:  指定一个组  由 sprite.Group()生成
                dokill: 是否从组中删除检测到碰撞的精灵
                collided:设置一个回调函数，用于制定特俗的检测方法，如果忽略该参数，那么默认检测精灵之间的rect是否重叠
        --生成组
            sprite.Group()

    管理图像和屏幕 surface     
        --创建一个新的surface对象
            pygame.Surface((w,h))  #如果不指定尺寸则和屏幕一样大
                arg2:
                    HWSURFACE 
                    SRCALPHA
                        有Alpha通道的surface，如果你需要透明，就要这个选项,使用透明 arg3=32
                arg3:
                    色深
        --获取子surface
            screen.subsurface(select_rect).copy()
                返回一个rect对象


    管理点阵图像数据 surfarrary  


    事件和帧信息 time    
        --设置游戏帧数
            timer=pygame.time.clock()  # 实例化一个clock对象用于控制游戏帧数
            timer.tick(200)  # 设置为不高于200帧


    缩放和移动图像 transform 
        --上下左右反转图像  
            flip()      
        --缩放图像 快速
            scale()     
        --旋转图像
            rotate()    
        --缩放并且旋转图像
            rotozoom()  
        --快速发达一倍图像
            scale2x()   
        --平滑缩放图像  精准缩放
            smoothscale()   
        --裁剪图像
            chop()  

    说明
        -- 有些模块可能在某些平台不存在 可以是用一以下代码检测
            if pygame.font is None:
                exit()
        --调用
            pygame.<模块名>.<方法名>



